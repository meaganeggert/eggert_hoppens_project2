plugins {
    alias(libs.plugins.androidApplication)
}

android {
    namespace 'com.example.eggert_hoppens_project2'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.eggert_hoppens_project2"
        minSdk 34
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        //Tells compiler where to store room schema.
        javaCompileOptions{
            annotationProcessorOptions{
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /**
     * Not entirely sure what this does. I think it generates a binding class for each
     * XML layout file in the module.
     */
    buildFeatures {
        viewBinding true;
    }
}

dependencies {
    // Intent Testing
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'

    // Adding Recyclerview
    implementation "androidx.recyclerview:recyclerview:1.3.2"

    // Adding Fragments
    def fragment_version = "1.6.2"
    implementation "androidx.fragment:fragment:$fragment_version"

    // Adding the room DB
    def room_version = "2.6.1"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit

    androidTestImplementation libs.runner
    androidTestImplementation libs.rules
    androidTestImplementation libs.espresso.core.v340
}